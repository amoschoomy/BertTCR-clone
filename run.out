
Starting BertTCR prediction script...

Arguments:
sample_dir: /scratch/project/tcr_ml/BertTCR/ZERO_embedding
model_file: /scratch/project/tcr_ml/BertTCR/TrainedModels/Pretrained_multiple_cancer_detection.pth
tcr_num: 100
max_length: 24
kernel_size: [2, 3, 4]
filter_num: [3, 2, 1]
dropout: 0.4
device: cuda:0
output: ./ZERO_prediction.tsv

Loading model...
Initializing BertTCR with parameters:
filter_num: [3, 2, 1]
kernel_size: [2, 3, 4]
ins_num: 100
drop_out: 0.4
Model loaded successfully

Starting prediction...

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_11_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6461494471049982
Prediction: True

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5618361106314992
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_11_embedding.pt
Loaded sample shape: torch.Size([87, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([87, 22, 768])
Input matrix size: 1469952

Making prediction...
Original input shape: torch.Size([87, 22, 768])
Shape after padding: torch.Size([87, 24, 768])
Shape after permute: torch.Size([87, 768, 24])
Shapes after individual convolutions: [torch.Size([87, 3, 1]), torch.Size([87, 2, 1]), torch.Size([87, 1, 1])]
Shape after concatenation: torch.Size([87, 6, 1])
Shape after first reshape: torch.Size([87, 1, 6])
Shape after FC layer and dropout: torch.Size([87, 1, 1])
Total elements before problematic reshape: 87
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.661922395667933
Prediction: True

Processing sample: TRUST_P003008_368975_T_R_HVJJLDSX3_ATGGCGCCTG-AGGCCGTGGA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6740078959851592
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6451140698250509
Prediction: True

Processing sample: TRUST_P001206_364075_T_R_HLFCWDSX3_ATTGAGGTCC-ATATAATCCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([76, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([76, 26, 768])
Input matrix size: 1517568

Making prediction...
Original input shape: torch.Size([76, 26, 768])
Shape after permute: torch.Size([76, 768, 26])
Shapes after individual convolutions: [torch.Size([76, 3, 1]), torch.Size([76, 2, 1]), torch.Size([76, 1, 1])]
Shape after concatenation: torch.Size([76, 6, 1])
Shape after first reshape: torch.Size([76, 1, 6])
Shape after FC layer and dropout: torch.Size([76, 1, 1])
Total elements before problematic reshape: 76
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5547304151319572
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_13_embedding.pt
Loaded sample shape: torch.Size([60, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([60, 21, 768])
Input matrix size: 967680

Making prediction...
Original input shape: torch.Size([60, 21, 768])
Shape after padding: torch.Size([60, 24, 768])
Shape after permute: torch.Size([60, 768, 24])
Shapes after individual convolutions: [torch.Size([60, 3, 1]), torch.Size([60, 2, 1]), torch.Size([60, 1, 1])]
Shape after concatenation: torch.Size([60, 6, 1])
Shape after first reshape: torch.Size([60, 1, 6])
Shape after FC layer and dropout: torch.Size([60, 1, 1])
Total elements before problematic reshape: 60
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6822355146164629
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_10_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5225242188947273
Prediction: True

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.53084294715031
Prediction: True

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6183306231814426
Prediction: True

Processing sample: TRUST_P014304_367290_T_R_HLGLKDSX3_CATAGTAAGG-GTAACTTGGT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6641650508098976
Prediction: True

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.38971673178715854
Prediction: False

Processing sample: TRUST_01-0051_409375_T_R_22HM3TLT3_TCAGAAGGCG-GGCCATCATA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.588306119656448
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6296420170704369
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7002170342605678
Prediction: True

Processing sample: TRUST_P003008_368975_T_R_HVJJLDSX3_ATGGCGCCTG-AGGCCGTGGA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([49, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([49, 20, 768])
Input matrix size: 752640

Making prediction...
Original input shape: torch.Size([49, 20, 768])
Shape after padding: torch.Size([49, 24, 768])
Shape after permute: torch.Size([49, 768, 24])
Shapes after individual convolutions: [torch.Size([49, 3, 1]), torch.Size([49, 2, 1]), torch.Size([49, 1, 1])]
Shape after concatenation: torch.Size([49, 6, 1])
Shape after first reshape: torch.Size([49, 1, 6])
Shape after FC layer and dropout: torch.Size([49, 1, 1])
Total elements before problematic reshape: 49
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6219665676938223
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6274818958798772
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJVKFDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.675668774024872
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6713720757629953
Prediction: True

Processing sample: TRUST_04-0097_420602_T_R_227CTJLT4_TGGTTCTCAT-CTCAAGGCCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([32, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([32, 22, 768])
Input matrix size: 540672

Making prediction...
Original input shape: torch.Size([32, 22, 768])
Shape after padding: torch.Size([32, 24, 768])
Shape after permute: torch.Size([32, 768, 24])
Shapes after individual convolutions: [torch.Size([32, 3, 1]), torch.Size([32, 2, 1]), torch.Size([32, 1, 1])]
Shape after concatenation: torch.Size([32, 6, 1])
Shape after first reshape: torch.Size([32, 1, 6])
Shape after FC layer and dropout: torch.Size([32, 1, 1])
Total elements before problematic reshape: 32
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4590516094941186
Prediction: False

Processing sample: TRUST_01-0074_405812_T_R_H2JN2DSXC_GCCATATAAC-GATATTGTGT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.33937676671353406
Prediction: False

Processing sample: TRUST_06-0015_392912_T_R_HHLMLDSX7_TCGTGCATTC-ATACCAACGC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([19, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([19, 20, 768])
Input matrix size: 291840

Making prediction...
Original input shape: torch.Size([19, 20, 768])
Shape after padding: torch.Size([19, 24, 768])
Shape after permute: torch.Size([19, 768, 24])
Shapes after individual convolutions: [torch.Size([19, 3, 1]), torch.Size([19, 2, 1]), torch.Size([19, 1, 1])]
Shape after concatenation: torch.Size([19, 6, 1])
Shape after first reshape: torch.Size([19, 1, 6])
Shape after FC layer and dropout: torch.Size([19, 1, 1])
Total elements before problematic reshape: 19
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6324017475434953
Prediction: True

Processing sample: TRUST_P018501_362876_T_R_HJWVCDSX3_GGTCTATTAA-CGTGTCGTGG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([29, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([29, 19, 768])
Input matrix size: 423168

Making prediction...
Original input shape: torch.Size([29, 19, 768])
Shape after padding: torch.Size([29, 24, 768])
Shape after permute: torch.Size([29, 768, 24])
Shapes after individual convolutions: [torch.Size([29, 3, 1]), torch.Size([29, 2, 1]), torch.Size([29, 1, 1])]
Shape after concatenation: torch.Size([29, 6, 1])
Shape after first reshape: torch.Size([29, 1, 6])
Shape after FC layer and dropout: torch.Size([29, 1, 1])
Total elements before problematic reshape: 29
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4911753461139024
Prediction: False

Processing sample: TRUST_P010806_359174_T_R_HJVKFDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.45458490679715413
Prediction: False

Processing sample: TRUST_P003008_368975_T_R_HVJJLDSX3_ATGGCGCCTG-AGGCCGTGGA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5209336326591297
Prediction: True

Processing sample: TRUST_06-0117_415663_T_R_22JLY5LT3_AAGTTCTAGT-GGTAAGATAA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([6, 17, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([6, 17, 768])
Input matrix size: 78336

Making prediction...
Original input shape: torch.Size([6, 17, 768])
Shape after padding: torch.Size([6, 24, 768])
Shape after permute: torch.Size([6, 768, 24])
Shapes after individual convolutions: [torch.Size([6, 3, 1]), torch.Size([6, 2, 1]), torch.Size([6, 1, 1])]
Shape after concatenation: torch.Size([6, 6, 1])
Shape after first reshape: torch.Size([6, 1, 6])
Shape after FC layer and dropout: torch.Size([6, 1, 1])
Total elements before problematic reshape: 6
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.48519458684178546
Prediction: False

Processing sample: TRUST_P014304_367290_T_R_HLGLKDSX3_CATAGTAAGG-GTAACTTGGT_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6559036211814402
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5599441253304526
Prediction: True

Processing sample: TRUST_P014601_368895_T_R_HVJJLDSX3_CCTCCGGTTG-TGGTGTTATG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.39397744787482025
Prediction: False

Processing sample: TRUST_P000808_365247_T_R_HL7JJDSX3_GAACTGAGCG-CGCTCCACGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([88, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([88, 22, 768])
Input matrix size: 1486848

Making prediction...
Original input shape: torch.Size([88, 22, 768])
Shape after padding: torch.Size([88, 24, 768])
Shape after permute: torch.Size([88, 768, 24])
Shapes after individual convolutions: [torch.Size([88, 3, 1]), torch.Size([88, 2, 1]), torch.Size([88, 1, 1])]
Shape after concatenation: torch.Size([88, 6, 1])
Shape after first reshape: torch.Size([88, 1, 6])
Shape after FC layer and dropout: torch.Size([88, 1, 1])
Total elements before problematic reshape: 88
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6036155985630065
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJVKFDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5971628726939867
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7039136683812087
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJVKFDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([50, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([50, 26, 768])
Input matrix size: 998400

Making prediction...
Original input shape: torch.Size([50, 26, 768])
Shape after permute: torch.Size([50, 768, 26])
Shapes after individual convolutions: [torch.Size([50, 3, 1]), torch.Size([50, 2, 1]), torch.Size([50, 1, 1])]
Shape after concatenation: torch.Size([50, 6, 1])
Shape after first reshape: torch.Size([50, 1, 6])
Shape after FC layer and dropout: torch.Size([50, 1, 1])
Total elements before problematic reshape: 50
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4134773883382161
Prediction: False

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.35685246253994457
Prediction: False

Processing sample: TRUST_07-0007_405807_T_R_H2JN2DSXC_TGAGTACAAC-GTCCAAGCGT_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([76, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([76, 26, 768])
Input matrix size: 1517568

Making prediction...
Original input shape: torch.Size([76, 26, 768])
Shape after permute: torch.Size([76, 768, 26])
Shapes after individual convolutions: [torch.Size([76, 3, 1]), torch.Size([76, 2, 1]), torch.Size([76, 1, 1])]
Shape after concatenation: torch.Size([76, 6, 1])
Shape after first reshape: torch.Size([76, 1, 6])
Shape after FC layer and dropout: torch.Size([76, 1, 1])
Total elements before problematic reshape: 76
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.30641064520823125
Prediction: False

Processing sample: TRUST_08-0002_392661_T_R_HJ7VFDSX7_GGAGCGTGTA-ACTTACGGAT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([57, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([57, 23, 768])
Input matrix size: 1006848

Making prediction...
Original input shape: torch.Size([57, 23, 768])
Shape after padding: torch.Size([57, 24, 768])
Shape after permute: torch.Size([57, 768, 24])
Shapes after individual convolutions: [torch.Size([57, 3, 1]), torch.Size([57, 2, 1]), torch.Size([57, 1, 1])]
Shape after concatenation: torch.Size([57, 6, 1])
Shape after first reshape: torch.Size([57, 1, 6])
Shape after FC layer and dropout: torch.Size([57, 1, 1])
Total elements before problematic reshape: 57
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5999372246654254
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_10_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6252491911743112
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_10_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6999119329390578
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.30214283615701526
Prediction: False

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7250755673349277
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_12_embedding.pt
Loaded sample shape: torch.Size([100, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 19, 768])
Input matrix size: 1459200

Making prediction...
Original input shape: torch.Size([100, 19, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5587684581717921
Prediction: True

Processing sample: TRUST_P006105_383717_T_R_H3LVMDSX7_AGGATGTGCT-GGAATTGTAA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4496013347401474
Prediction: False

Processing sample: TRUST_P014101_368956_T_R_HVJJLDSX3_GAATACCTAT-ACTCTATTGT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([72, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([72, 23, 768])
Input matrix size: 1271808

Making prediction...
Original input shape: torch.Size([72, 23, 768])
Shape after padding: torch.Size([72, 24, 768])
Shape after permute: torch.Size([72, 768, 24])
Shapes after individual convolutions: [torch.Size([72, 3, 1]), torch.Size([72, 2, 1]), torch.Size([72, 1, 1])]
Shape after concatenation: torch.Size([72, 6, 1])
Shape after first reshape: torch.Size([72, 1, 6])
Shape after FC layer and dropout: torch.Size([72, 1, 1])
Total elements before problematic reshape: 72
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7072530912140176
Prediction: True

Processing sample: TRUST_07-0051_420099_T_R_22KKVMLT3_ACTAGCGCTA-TTACTTCCTC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([7, 18, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([7, 18, 768])
Input matrix size: 96768

Making prediction...
Original input shape: torch.Size([7, 18, 768])
Shape after padding: torch.Size([7, 24, 768])
Shape after permute: torch.Size([7, 768, 24])
Shapes after individual convolutions: [torch.Size([7, 3, 1]), torch.Size([7, 2, 1]), torch.Size([7, 1, 1])]
Shape after concatenation: torch.Size([7, 6, 1])
Shape after first reshape: torch.Size([7, 1, 6])
Shape after FC layer and dropout: torch.Size([7, 1, 1])
Total elements before problematic reshape: 7
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5351810700391028
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJVKFDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5841372702333566
Prediction: True

Processing sample: TRUST_P014304_367290_T_R_HLGLKDSX3_CATAGTAAGG-GTAACTTGGT_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([13, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([13, 19, 768])
Input matrix size: 189696

Making prediction...
Original input shape: torch.Size([13, 19, 768])
Shape after padding: torch.Size([13, 24, 768])
Shape after permute: torch.Size([13, 768, 24])
Shapes after individual convolutions: [torch.Size([13, 3, 1]), torch.Size([13, 2, 1]), torch.Size([13, 1, 1])]
Shape after concatenation: torch.Size([13, 6, 1])
Shape after first reshape: torch.Size([13, 1, 6])
Shape after FC layer and dropout: torch.Size([13, 1, 1])
Total elements before problematic reshape: 13
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.46272980242656103
Prediction: False

Processing sample: TRUST_P021501_381133_T_R_HWWC5DSX5_CTCTGCAGCG-TACATCCATC_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([54, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([54, 19, 768])
Input matrix size: 787968

Making prediction...
Original input shape: torch.Size([54, 19, 768])
Shape after padding: torch.Size([54, 24, 768])
Shape after permute: torch.Size([54, 768, 24])
Shapes after individual convolutions: [torch.Size([54, 3, 1]), torch.Size([54, 2, 1]), torch.Size([54, 1, 1])]
Shape after concatenation: torch.Size([54, 6, 1])
Shape after first reshape: torch.Size([54, 1, 6])
Shape after FC layer and dropout: torch.Size([54, 1, 1])
Total elements before problematic reshape: 54
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.40581744363621325
Prediction: False

Processing sample: TRUST_P005808_386805_T_R_HFF3MDSX7_CACTCAATTC-CACAACTTAA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([87, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([87, 23, 768])
Input matrix size: 1536768

Making prediction...
Original input shape: torch.Size([87, 23, 768])
Shape after padding: torch.Size([87, 24, 768])
Shape after permute: torch.Size([87, 768, 24])
Shapes after individual convolutions: [torch.Size([87, 3, 1]), torch.Size([87, 2, 1]), torch.Size([87, 1, 1])]
Shape after concatenation: torch.Size([87, 6, 1])
Shape after first reshape: torch.Size([87, 1, 6])
Shape after FC layer and dropout: torch.Size([87, 1, 1])
Total elements before problematic reshape: 87
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5446166943912217
Prediction: True

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6618329426011825
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.472065629260365
Prediction: False

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_9_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.705207878027148
Prediction: True

Processing sample: TRUST_P013302_357399_T_R_HCK5MDSX3_CCTGACCACT-ATAGCCAAGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.533902958251118
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6871035213527945
Prediction: True

Processing sample: TRUST_P010704_368955_T_R_HVJJLDSX3_AGGAGGTATC-TGCCAACTGG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([73, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([73, 20, 768])
Input matrix size: 1121280

Making prediction...
Original input shape: torch.Size([73, 20, 768])
Shape after padding: torch.Size([73, 24, 768])
Shape after permute: torch.Size([73, 768, 24])
Shapes after individual convolutions: [torch.Size([73, 3, 1]), torch.Size([73, 2, 1]), torch.Size([73, 1, 1])]
Shape after concatenation: torch.Size([73, 6, 1])
Shape after first reshape: torch.Size([73, 1, 6])
Shape after FC layer and dropout: torch.Size([73, 1, 1])
Total elements before problematic reshape: 73
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6785996985790003
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6750031041468547
Prediction: True

Processing sample: TRUST_P021501_381133_T_R_HWWC5DSX5_CTCTGCAGCG-TACATCCATC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 25, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 25, 768])
Input matrix size: 1920000

Making prediction...
Original input shape: torch.Size([100, 25, 768])
Shape after permute: torch.Size([100, 768, 25])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.3590439711349941
Prediction: False

Processing sample: TRUST_P000305_339702_HFHFJDSX2_TGCCGGTCAG-TTGTATCAGG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6824481419909908
Prediction: True

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6807392588281389
Prediction: True

Processing sample: TRUST_P003008_368975_T_R_HVJJLDSX3_ATGGCGCCTG-AGGCCGTGGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5758199034637992
Prediction: True

Processing sample: TRUST_P013202_356800_T_R_HCK5MDSX3_AGAATTCGCC-GAGCTTGCCG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([39, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([39, 26, 768])
Input matrix size: 778752

Making prediction...
Original input shape: torch.Size([39, 26, 768])
Shape after permute: torch.Size([39, 768, 26])
Shapes after individual convolutions: [torch.Size([39, 3, 1]), torch.Size([39, 2, 1]), torch.Size([39, 1, 1])]
Shape after concatenation: torch.Size([39, 6, 1])
Shape after first reshape: torch.Size([39, 1, 6])
Shape after FC layer and dropout: torch.Size([39, 1, 1])
Total elements before problematic reshape: 39
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6695890847524079
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_9_embedding.pt
Loaded sample shape: torch.Size([100, 24, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 24, 768])
Input matrix size: 1843200

Making prediction...
Original input shape: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.31675281650150056
Prediction: False

Processing sample: TRUST_P003008_368975_T_R_HVJJLDSX3_ATGGCGCCTG-AGGCCGTGGA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5239826147106885
Prediction: True

Processing sample: TRUST_P006001_339939_HFHFJDSX2_TCTAGGCGCG-TTAACCTTCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([49, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([49, 20, 768])
Input matrix size: 752640

Making prediction...
Original input shape: torch.Size([49, 20, 768])
Shape after padding: torch.Size([49, 24, 768])
Shape after permute: torch.Size([49, 768, 24])
Shapes after individual convolutions: [torch.Size([49, 3, 1]), torch.Size([49, 2, 1]), torch.Size([49, 1, 1])]
Shape after concatenation: torch.Size([49, 6, 1])
Shape after first reshape: torch.Size([49, 1, 6])
Shape after FC layer and dropout: torch.Size([49, 1, 1])
Total elements before problematic reshape: 49
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5793248822912148
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7210999039621181
Prediction: True

Processing sample: TRUST_210416_A01221_0035_ML212333_P009604_MAN-20210413_TSStrmRNA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6364708693587519
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_9_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5063239539834656
Prediction: True

Processing sample: TRUST_P014601_368895_T_R_HVJJLDSX3_CCTCCGGTTG-TGGTGTTATG_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([29, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([29, 20, 768])
Input matrix size: 445440

Making prediction...
Original input shape: torch.Size([29, 20, 768])
Shape after padding: torch.Size([29, 24, 768])
Shape after permute: torch.Size([29, 768, 24])
Shapes after individual convolutions: [torch.Size([29, 3, 1]), torch.Size([29, 2, 1]), torch.Size([29, 1, 1])]
Shape after concatenation: torch.Size([29, 6, 1])
Shape after first reshape: torch.Size([29, 1, 6])
Shape after FC layer and dropout: torch.Size([29, 1, 1])
Total elements before problematic reshape: 29
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5072384187666299
Prediction: True

Processing sample: TRUST_210521_A01221_0042_ML212814_P006607_MAN-20210519_TSStrmRNA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6647834293578819
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.37465612331455356
Prediction: False

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.3948447714672178
Prediction: False

Processing sample: TRUST_01-0074_405812_T_R_H2JN2DSXC_GCCATATAAC-GATATTGTGT_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([16, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([16, 20, 768])
Input matrix size: 245760

Making prediction...
Original input shape: torch.Size([16, 20, 768])
Shape after padding: torch.Size([16, 24, 768])
Shape after permute: torch.Size([16, 768, 24])
Shapes after individual convolutions: [torch.Size([16, 3, 1]), torch.Size([16, 2, 1]), torch.Size([16, 1, 1])]
Shape after concatenation: torch.Size([16, 6, 1])
Shape after first reshape: torch.Size([16, 1, 6])
Shape after FC layer and dropout: torch.Size([16, 1, 1])
Total elements before problematic reshape: 16
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5168194988018974
Prediction: True

Processing sample: TRUST_P011802_368930_T_R_HVJJLDSX3_AACGAGGCCG-ATCCAGGTAT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([95, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([95, 23, 768])
Input matrix size: 1678080

Making prediction...
Original input shape: torch.Size([95, 23, 768])
Shape after padding: torch.Size([95, 24, 768])
Shape after permute: torch.Size([95, 768, 24])
Shapes after individual convolutions: [torch.Size([95, 3, 1]), torch.Size([95, 2, 1]), torch.Size([95, 1, 1])]
Shape after concatenation: torch.Size([95, 6, 1])
Shape after first reshape: torch.Size([95, 1, 6])
Shape after FC layer and dropout: torch.Size([95, 1, 1])
Total elements before problematic reshape: 95
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.40986619343491154
Prediction: False

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_11_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.705182971116272
Prediction: True

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6322013767614568
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 25, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 25, 768])
Input matrix size: 1920000

Making prediction...
Original input shape: torch.Size([100, 25, 768])
Shape after permute: torch.Size([100, 768, 25])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6729182150421309
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_8_embedding.pt
Loaded sample shape: torch.Size([34, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([34, 19, 768])
Input matrix size: 496128

Making prediction...
Original input shape: torch.Size([34, 19, 768])
Shape after padding: torch.Size([34, 24, 768])
Shape after permute: torch.Size([34, 768, 24])
Shapes after individual convolutions: [torch.Size([34, 3, 1]), torch.Size([34, 2, 1]), torch.Size([34, 1, 1])]
Shape after concatenation: torch.Size([34, 6, 1])
Shape after first reshape: torch.Size([34, 1, 6])
Shape after FC layer and dropout: torch.Size([34, 1, 1])
Total elements before problematic reshape: 34
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6225785680439555
Prediction: True

Processing sample: TRUST_P013302_357399_T_R_HCK5MDSX3_CCTGACCACT-ATAGCCAAGA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.642894161429202
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.3792101737968753
Prediction: False

Processing sample: TRUST_P021101_378759_T_R_HMHMYDSX5_TCTATCCTAA-CCAGTCGACG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([20, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([20, 21, 768])
Input matrix size: 322560

Making prediction...
Original input shape: torch.Size([20, 21, 768])
Shape after padding: torch.Size([20, 24, 768])
Shape after permute: torch.Size([20, 768, 24])
Shapes after individual convolutions: [torch.Size([20, 3, 1]), torch.Size([20, 2, 1]), torch.Size([20, 1, 1])]
Shape after concatenation: torch.Size([20, 6, 1])
Shape after first reshape: torch.Size([20, 1, 6])
Shape after FC layer and dropout: torch.Size([20, 1, 1])
Total elements before problematic reshape: 20
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5684750107513193
Prediction: True

Processing sample: TRUST_P006105_383717_T_R_H3LVMDSX7_AGGATGTGCT-GGAATTGTAA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.711351654705743
Prediction: True

Processing sample: TRUST_06-0057_405805_T_R_H2JN2DSXC_CTTCAACCAC-AGGCGCATAA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 25, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 25, 768])
Input matrix size: 1920000

Making prediction...
Original input shape: torch.Size([100, 25, 768])
Shape after permute: torch.Size([100, 768, 25])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6800881200748726
Prediction: True

Processing sample: TRUST_01-0079_406620_T_R_H2JTNDSXC_CTCGTAGGCA-AAGAGGATGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([90, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([90, 20, 768])
Input matrix size: 1382400

Making prediction...
Original input shape: torch.Size([90, 20, 768])
Shape after padding: torch.Size([90, 24, 768])
Shape after permute: torch.Size([90, 768, 24])
Shapes after individual convolutions: [torch.Size([90, 3, 1]), torch.Size([90, 2, 1]), torch.Size([90, 1, 1])]
Shape after concatenation: torch.Size([90, 6, 1])
Shape after first reshape: torch.Size([90, 1, 6])
Shape after FC layer and dropout: torch.Size([90, 1, 1])
Total elements before problematic reshape: 90
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.647492639270464
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5598417471606655
Prediction: True

Processing sample: TRUST_P006105_383717_T_R_H3LVMDSX7_AGGATGTGCT-GGAATTGTAA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5397709344731255
Prediction: True

Processing sample: TRUST_06-0057_405805_T_R_H2JN2DSXC_CTTCAACCAC-AGGCGCATAA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([13, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([13, 21, 768])
Input matrix size: 209664

Making prediction...
Original input shape: torch.Size([13, 21, 768])
Shape after padding: torch.Size([13, 24, 768])
Shape after permute: torch.Size([13, 768, 24])
Shapes after individual convolutions: [torch.Size([13, 3, 1]), torch.Size([13, 2, 1]), torch.Size([13, 1, 1])]
Shape after concatenation: torch.Size([13, 6, 1])
Shape after first reshape: torch.Size([13, 1, 6])
Shape after FC layer and dropout: torch.Size([13, 1, 1])
Total elements before problematic reshape: 13
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4903787182301997
Prediction: False

Processing sample: TRUST_P001601_339699_HFHFJDSX2_TCTCACACGC-TCACTGTCCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([21, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([21, 26, 768])
Input matrix size: 419328

Making prediction...
Original input shape: torch.Size([21, 26, 768])
Shape after permute: torch.Size([21, 768, 26])
Shapes after individual convolutions: [torch.Size([21, 3, 1]), torch.Size([21, 2, 1]), torch.Size([21, 1, 1])]
Shape after concatenation: torch.Size([21, 6, 1])
Shape after first reshape: torch.Size([21, 1, 6])
Shape after FC layer and dropout: torch.Size([21, 1, 1])
Total elements before problematic reshape: 21
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6398708656658781
Prediction: True

Processing sample: TRUST_02-0093_420598_T_R_227CTJLT4_ATTGATACTG-TACACGCTCC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([21, 24, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([21, 24, 768])
Input matrix size: 387072

Making prediction...
Original input shape: torch.Size([21, 24, 768])
Shape after permute: torch.Size([21, 768, 24])
Shapes after individual convolutions: [torch.Size([21, 3, 1]), torch.Size([21, 2, 1]), torch.Size([21, 1, 1])]
Shape after concatenation: torch.Size([21, 6, 1])
Shape after first reshape: torch.Size([21, 1, 6])
Shape after FC layer and dropout: torch.Size([21, 1, 1])
Total elements before problematic reshape: 21
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4223416793865754
Prediction: False

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.27752837162671384
Prediction: False

Processing sample: TRUST_06-0135_417862_T_R_22KLKMLT3_GTAACAATCT-CTCTGTATAC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([41, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([41, 20, 768])
Input matrix size: 629760

Making prediction...
Original input shape: torch.Size([41, 20, 768])
Shape after padding: torch.Size([41, 24, 768])
Shape after permute: torch.Size([41, 768, 24])
Shapes after individual convolutions: [torch.Size([41, 3, 1]), torch.Size([41, 2, 1]), torch.Size([41, 1, 1])]
Shape after concatenation: torch.Size([41, 6, 1])
Shape after first reshape: torch.Size([41, 1, 6])
Shape after FC layer and dropout: torch.Size([41, 1, 1])
Total elements before problematic reshape: 41
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5486684169846876
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_13_embedding.pt
Loaded sample shape: torch.Size([86, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([86, 22, 768])
Input matrix size: 1453056

Making prediction...
Original input shape: torch.Size([86, 22, 768])
Shape after padding: torch.Size([86, 24, 768])
Shape after permute: torch.Size([86, 768, 24])
Shapes after individual convolutions: [torch.Size([86, 3, 1]), torch.Size([86, 2, 1]), torch.Size([86, 1, 1])]
Shape after concatenation: torch.Size([86, 6, 1])
Shape after first reshape: torch.Size([86, 1, 6])
Shape after FC layer and dropout: torch.Size([86, 1, 1])
Total elements before problematic reshape: 86
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.49094738652653
Prediction: False

Processing sample: TRUST_P000305_339702_HFHFJDSX2_TGCCGGTCAG-TTGTATCAGG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([42, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([42, 21, 768])
Input matrix size: 677376

Making prediction...
Original input shape: torch.Size([42, 21, 768])
Shape after padding: torch.Size([42, 24, 768])
Shape after permute: torch.Size([42, 768, 24])
Shapes after individual convolutions: [torch.Size([42, 3, 1]), torch.Size([42, 2, 1]), torch.Size([42, 1, 1])]
Shape after concatenation: torch.Size([42, 6, 1])
Shape after first reshape: torch.Size([42, 1, 6])
Shape after FC layer and dropout: torch.Size([42, 1, 1])
Total elements before problematic reshape: 42
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5056133221467546
Prediction: True

Processing sample: TRUST_07-0007_405807_T_R_H2JN2DSXC_TGAGTACAAC-GTCCAAGCGT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4982998511154408
Prediction: False

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_8_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6977944594453088
Prediction: True

Processing sample: TRUST_P014304_367290_T_R_HL5M2DSX3_CATAGTAAGG-GTAACTTGGT_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6489612072790482
Prediction: True

Processing sample: TRUST_01-0051_409375_T_R_22HM3TLT3_TCAGAAGGCG-GGCCATCATA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([98, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([98, 20, 768])
Input matrix size: 1505280

Making prediction...
Original input shape: torch.Size([98, 20, 768])
Shape after padding: torch.Size([98, 24, 768])
Shape after permute: torch.Size([98, 768, 24])
Shapes after individual convolutions: [torch.Size([98, 3, 1]), torch.Size([98, 2, 1]), torch.Size([98, 1, 1])]
Shape after concatenation: torch.Size([98, 6, 1])
Shape after first reshape: torch.Size([98, 1, 6])
Shape after FC layer and dropout: torch.Size([98, 1, 1])
Total elements before problematic reshape: 98
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6832446809581438
Prediction: True

Processing sample: TRUST_P013202_356800_T_R_HCK5MDSX3_AGAATTCGCC-GAGCTTGCCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5994579471684017
Prediction: True

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([77, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([77, 22, 768])
Input matrix size: 1300992

Making prediction...
Original input shape: torch.Size([77, 22, 768])
Shape after padding: torch.Size([77, 24, 768])
Shape after permute: torch.Size([77, 768, 24])
Shapes after individual convolutions: [torch.Size([77, 3, 1]), torch.Size([77, 2, 1]), torch.Size([77, 1, 1])]
Shape after concatenation: torch.Size([77, 6, 1])
Shape after first reshape: torch.Size([77, 1, 6])
Shape after FC layer and dropout: torch.Size([77, 1, 1])
Total elements before problematic reshape: 77
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6047458590066087
Prediction: True

Processing sample: TRUST_P010704_368955_T_R_HVJJLDSX3_AGGAGGTATC-TGCCAACTGG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6406576180772442
Prediction: True

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6281841023859778
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_8_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5506460136933419
Prediction: True

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7172690289135809
Prediction: True

Processing sample: TRUST_P013302_357399_T_R_HCK5MDSX3_CCTGACCACT-ATAGCCAAGA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5154363467280608
Prediction: True

Processing sample: TRUST_06-0091_411809_T_R_22HWGTLT3_CTGAGCCGGT-CCTTCACGTA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.3281057260557389
Prediction: False

Processing sample: TRUST_07-0007_405807_T_R_H2JTNDSXC_CAACTGCAAC-GTTGCGTTCA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5107934766342443
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6134824216180021
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7048326081831658
Prediction: True

Processing sample: TRUST_07-0007_405807_T_R_H2JTNDSXC_CAACTGCAAC-GTTGCGTTCA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([19, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([19, 19, 768])
Input matrix size: 277248

Making prediction...
Original input shape: torch.Size([19, 19, 768])
Shape after padding: torch.Size([19, 24, 768])
Shape after permute: torch.Size([19, 768, 24])
Shapes after individual convolutions: [torch.Size([19, 3, 1]), torch.Size([19, 2, 1]), torch.Size([19, 1, 1])]
Shape after concatenation: torch.Size([19, 6, 1])
Shape after first reshape: torch.Size([19, 1, 6])
Shape after FC layer and dropout: torch.Size([19, 1, 1])
Total elements before problematic reshape: 19
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.46259933667514574
Prediction: False

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5569690851724263
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.35951665499352736
Prediction: False

Processing sample: TRUST_07-0007_405807_T_R_H2JN2DSXC_TGAGTACAAC-GTCCAAGCGT_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.543937821264496
Prediction: True

Processing sample: TRUST_P004607_366471_T_R_HJLL5DSX3_CGCCATATCT-ATCTCCGGTC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([67, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([67, 20, 768])
Input matrix size: 1029120

Making prediction...
Original input shape: torch.Size([67, 20, 768])
Shape after padding: torch.Size([67, 24, 768])
Shape after permute: torch.Size([67, 768, 24])
Shapes after individual convolutions: [torch.Size([67, 3, 1]), torch.Size([67, 2, 1]), torch.Size([67, 1, 1])]
Shape after concatenation: torch.Size([67, 6, 1])
Shape after first reshape: torch.Size([67, 1, 6])
Shape after FC layer and dropout: torch.Size([67, 1, 1])
Total elements before problematic reshape: 67
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.658065067818617
Prediction: True

Processing sample: TRUST_P002308_375112_T_R_HVWF5DSX3_TACAAGACTT-TGAACACCTG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([69, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([69, 23, 768])
Input matrix size: 1218816

Making prediction...
Original input shape: torch.Size([69, 23, 768])
Shape after padding: torch.Size([69, 24, 768])
Shape after permute: torch.Size([69, 768, 24])
Shapes after individual convolutions: [torch.Size([69, 3, 1]), torch.Size([69, 2, 1]), torch.Size([69, 1, 1])]
Shape after concatenation: torch.Size([69, 6, 1])
Shape after first reshape: torch.Size([69, 1, 6])
Shape after FC layer and dropout: torch.Size([69, 1, 1])
Total elements before problematic reshape: 69
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5391187272099977
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([100, 24, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 24, 768])
Input matrix size: 1843200

Making prediction...
Original input shape: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.605977594998437
Prediction: True

Processing sample: TRUST_P014304_367290_T_R_HL5M2DSX3_CATAGTAAGG-GTAACTTGGT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.4893858585706664
Prediction: False

Processing sample: TRUST_P003006_339933_HFHFJDSX2_GAACGCAATA-ACAGTAAGAT_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([43, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([43, 23, 768])
Input matrix size: 759552

Making prediction...
Original input shape: torch.Size([43, 23, 768])
Shape after padding: torch.Size([43, 24, 768])
Shape after permute: torch.Size([43, 768, 24])
Shapes after individual convolutions: [torch.Size([43, 3, 1]), torch.Size([43, 2, 1]), torch.Size([43, 1, 1])]
Shape after concatenation: torch.Size([43, 6, 1])
Shape after first reshape: torch.Size([43, 1, 6])
Shape after FC layer and dropout: torch.Size([43, 1, 1])
Total elements before problematic reshape: 43
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5400691604332887
Prediction: True

Processing sample: TRUST_08-0016_406412_T_R_H3W5NDSXC_TGCAATGAAT-TTACTTCTGG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([78, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([78, 22, 768])
Input matrix size: 1317888

Making prediction...
Original input shape: torch.Size([78, 22, 768])
Shape after padding: torch.Size([78, 24, 768])
Shape after permute: torch.Size([78, 768, 24])
Shapes after individual convolutions: [torch.Size([78, 3, 1]), torch.Size([78, 2, 1]), torch.Size([78, 1, 1])]
Shape after concatenation: torch.Size([78, 6, 1])
Shape after first reshape: torch.Size([78, 1, 6])
Shape after FC layer and dropout: torch.Size([78, 1, 1])
Total elements before problematic reshape: 78
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5848912660267499
Prediction: True

Processing sample: TRUST_06-0091_411809_T_R_22HWGTLT3_CTGAGCCGGT-CCTTCACGTA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([57, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([57, 26, 768])
Input matrix size: 1138176

Making prediction...
Original input shape: torch.Size([57, 26, 768])
Shape after permute: torch.Size([57, 768, 26])
Shapes after individual convolutions: [torch.Size([57, 3, 1]), torch.Size([57, 2, 1]), torch.Size([57, 1, 1])]
Shape after concatenation: torch.Size([57, 6, 1])
Shape after first reshape: torch.Size([57, 1, 6])
Shape after FC layer and dropout: torch.Size([57, 1, 1])
Total elements before problematic reshape: 57
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6445412077560231
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7083231819331438
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 24, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 24, 768])
Input matrix size: 1843200

Making prediction...
Original input shape: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5555040071037529
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6863055582474732
Prediction: True

Processing sample: TRUST_210521_A01221_0042_ML212814_P006607_MAN-20210519_TSStrmRNA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([95, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([95, 22, 768])
Input matrix size: 1605120

Making prediction...
Original input shape: torch.Size([95, 22, 768])
Shape after padding: torch.Size([95, 24, 768])
Shape after permute: torch.Size([95, 768, 24])
Shapes after individual convolutions: [torch.Size([95, 3, 1]), torch.Size([95, 2, 1]), torch.Size([95, 1, 1])]
Shape after concatenation: torch.Size([95, 6, 1])
Shape after first reshape: torch.Size([95, 1, 6])
Shape after FC layer and dropout: torch.Size([95, 1, 1])
Total elements before problematic reshape: 95
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6564908629237363
Prediction: True

Processing sample: TRUST_02-0063_412343_T_R_22HWH5LT3_GAGGTTAGAC-AATGTATTGC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([22, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([22, 19, 768])
Input matrix size: 321024

Making prediction...
Original input shape: torch.Size([22, 19, 768])
Shape after padding: torch.Size([22, 24, 768])
Shape after permute: torch.Size([22, 768, 24])
Shapes after individual convolutions: [torch.Size([22, 3, 1]), torch.Size([22, 2, 1]), torch.Size([22, 1, 1])]
Shape after concatenation: torch.Size([22, 6, 1])
Shape after first reshape: torch.Size([22, 1, 6])
Shape after FC layer and dropout: torch.Size([22, 1, 1])
Total elements before problematic reshape: 22
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.47714706175661814
Prediction: False

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6295694871671306
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([42, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([42, 26, 768])
Input matrix size: 838656

Making prediction...
Original input shape: torch.Size([42, 26, 768])
Shape after permute: torch.Size([42, 768, 26])
Shapes after individual convolutions: [torch.Size([42, 3, 1]), torch.Size([42, 2, 1]), torch.Size([42, 1, 1])]
Shape after concatenation: torch.Size([42, 6, 1])
Shape after first reshape: torch.Size([42, 1, 6])
Shape after FC layer and dropout: torch.Size([42, 1, 1])
Total elements before problematic reshape: 42
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5983220862945455
Prediction: True

Processing sample: TRUST_P014304_367290_T_R_HL5M2DSX3_CATAGTAAGG-GTAACTTGGT_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([17, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([17, 19, 768])
Input matrix size: 248064

Making prediction...
Original input shape: torch.Size([17, 19, 768])
Shape after padding: torch.Size([17, 24, 768])
Shape after permute: torch.Size([17, 768, 24])
Shapes after individual convolutions: [torch.Size([17, 3, 1]), torch.Size([17, 2, 1]), torch.Size([17, 1, 1])]
Shape after concatenation: torch.Size([17, 6, 1])
Shape after first reshape: torch.Size([17, 1, 6])
Shape after FC layer and dropout: torch.Size([17, 1, 1])
Total elements before problematic reshape: 17
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.550167282202358
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6543011936764727
Prediction: True

Processing sample: TRUST_P006105_383717_T_R_H3LVMDSX7_AGGATGTGCT-GGAATTGTAA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([74, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([74, 22, 768])
Input matrix size: 1250304

Making prediction...
Original input shape: torch.Size([74, 22, 768])
Shape after padding: torch.Size([74, 24, 768])
Shape after permute: torch.Size([74, 768, 24])
Shapes after individual convolutions: [torch.Size([74, 3, 1]), torch.Size([74, 2, 1]), torch.Size([74, 1, 1])]
Shape after concatenation: torch.Size([74, 6, 1])
Shape after first reshape: torch.Size([74, 1, 6])
Shape after FC layer and dropout: torch.Size([74, 1, 1])
Total elements before problematic reshape: 74
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6942390082420977
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_12_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7048505635942951
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([11, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([11, 20, 768])
Input matrix size: 168960

Making prediction...
Original input shape: torch.Size([11, 20, 768])
Shape after padding: torch.Size([11, 24, 768])
Shape after permute: torch.Size([11, 768, 24])
Shapes after individual convolutions: [torch.Size([11, 3, 1]), torch.Size([11, 2, 1]), torch.Size([11, 1, 1])]
Shape after concatenation: torch.Size([11, 6, 1])
Shape after first reshape: torch.Size([11, 1, 6])
Shape after FC layer and dropout: torch.Size([11, 1, 1])
Total elements before problematic reshape: 11
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5370323024640812
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6608690359213301
Prediction: True

Processing sample: TRUST_P018501_362876_T_R_HJV7GDSX3_GGTCTATTAA-CGTGTCGTGG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([20, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([20, 19, 768])
Input matrix size: 291840

Making prediction...
Original input shape: torch.Size([20, 19, 768])
Shape after padding: torch.Size([20, 24, 768])
Shape after permute: torch.Size([20, 768, 24])
Shapes after individual convolutions: [torch.Size([20, 3, 1]), torch.Size([20, 2, 1]), torch.Size([20, 1, 1])]
Shape after concatenation: torch.Size([20, 6, 1])
Shape after first reshape: torch.Size([20, 1, 6])
Shape after FC layer and dropout: torch.Size([20, 1, 1])
Total elements before problematic reshape: 20
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5757610423145368
Prediction: True

Processing sample: TRUST_02-0063_412343_T_R_22HWGCLT3_GAGGTTAGAC-AATGTATTGC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([46, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([46, 22, 768])
Input matrix size: 777216

Making prediction...
Original input shape: torch.Size([46, 22, 768])
Shape after padding: torch.Size([46, 24, 768])
Shape after permute: torch.Size([46, 768, 24])
Shapes after individual convolutions: [torch.Size([46, 3, 1]), torch.Size([46, 2, 1]), torch.Size([46, 1, 1])]
Shape after concatenation: torch.Size([46, 6, 1])
Shape after first reshape: torch.Size([46, 1, 6])
Shape after FC layer and dropout: torch.Size([46, 1, 1])
Total elements before problematic reshape: 46
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6227763903153806
Prediction: True

Processing sample: TRUST_P021101_378759_T_R_HMHMYDSX5_TCTATCCTAA-CCAGTCGACG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5569200270311997
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 25, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 25, 768])
Input matrix size: 1920000

Making prediction...
Original input shape: torch.Size([100, 25, 768])
Shape after permute: torch.Size([100, 768, 25])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6133099709309252
Prediction: True

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6492341013262501
Prediction: True

Processing sample: TRUST_210416_A01221_0035_ML212333_P009604_MAN-20210413_TSStrmRNA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([96, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([96, 22, 768])
Input matrix size: 1622016

Making prediction...
Original input shape: torch.Size([96, 22, 768])
Shape after padding: torch.Size([96, 24, 768])
Shape after permute: torch.Size([96, 768, 24])
Shapes after individual convolutions: [torch.Size([96, 3, 1]), torch.Size([96, 2, 1]), torch.Size([96, 1, 1])]
Shape after concatenation: torch.Size([96, 6, 1])
Shape after first reshape: torch.Size([96, 1, 6])
Shape after FC layer and dropout: torch.Size([96, 1, 1])
Total elements before problematic reshape: 96
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5879774220133165
Prediction: True

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6093188054402002
Prediction: True

Processing sample: TRUST_07-0007_405807_T_R_H2JTNDSXC_CAACTGCAAC-GTTGCGTTCA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7046903808889116
Prediction: True

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7035174403128994
Prediction: True

Processing sample: TRUST_02-0063_412343_T_R_22HYYMLT3_GAGGTTAGAC-AATGTATTGC_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([11, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([11, 21, 768])
Input matrix size: 177408

Making prediction...
Original input shape: torch.Size([11, 21, 768])
Shape after padding: torch.Size([11, 24, 768])
Shape after permute: torch.Size([11, 768, 24])
Shapes after individual convolutions: [torch.Size([11, 3, 1]), torch.Size([11, 2, 1]), torch.Size([11, 1, 1])]
Shape after concatenation: torch.Size([11, 6, 1])
Shape after first reshape: torch.Size([11, 1, 6])
Shape after FC layer and dropout: torch.Size([11, 1, 1])
Total elements before problematic reshape: 11
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5728859411865139
Prediction: True

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_8_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.633025362967316
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_3_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.403378529331934
Prediction: False

Processing sample: TRUST_P014801_368933_T_R_HVJJLDSX3_TACGTGAAGG-CTAATAACCG_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.650582200720887
Prediction: True

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([10, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([10, 19, 768])
Input matrix size: 145920

Making prediction...
Original input shape: torch.Size([10, 19, 768])
Shape after padding: torch.Size([10, 24, 768])
Shape after permute: torch.Size([10, 768, 24])
Shapes after individual convolutions: [torch.Size([10, 3, 1]), torch.Size([10, 2, 1]), torch.Size([10, 1, 1])]
Shape after concatenation: torch.Size([10, 6, 1])
Shape after first reshape: torch.Size([10, 1, 6])
Shape after FC layer and dropout: torch.Size([10, 1, 1])
Total elements before problematic reshape: 10
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.503243691416779
Prediction: True

Processing sample: TRUST_P005808_386805_T_R_HHNKLDRX3_CACTCAATTC-CACAACTTAA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([9, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([9, 20, 768])
Input matrix size: 138240

Making prediction...
Original input shape: torch.Size([9, 20, 768])
Shape after padding: torch.Size([9, 24, 768])
Shape after permute: torch.Size([9, 768, 24])
Shapes after individual convolutions: [torch.Size([9, 3, 1]), torch.Size([9, 2, 1]), torch.Size([9, 1, 1])]
Shape after concatenation: torch.Size([9, 6, 1])
Shape after first reshape: torch.Size([9, 1, 6])
Shape after FC layer and dropout: torch.Size([9, 1, 1])
Total elements before problematic reshape: 9
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5667327284262358
Prediction: True

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6748679390998357
Prediction: True

Processing sample: TRUST_P013302_357399_T_R_HCK5MDSX3_CCTGACCACT-ATAGCCAAGA_R1_cdr3_trb_frequencies.tsv_batch_6_embedding.pt
Loaded sample shape: torch.Size([28, 19, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([28, 19, 768])
Input matrix size: 408576

Making prediction...
Original input shape: torch.Size([28, 19, 768])
Shape after padding: torch.Size([28, 24, 768])
Shape after permute: torch.Size([28, 768, 24])
Shapes after individual convolutions: [torch.Size([28, 3, 1]), torch.Size([28, 2, 1]), torch.Size([28, 1, 1])]
Shape after concatenation: torch.Size([28, 6, 1])
Shape after first reshape: torch.Size([28, 1, 6])
Shape after FC layer and dropout: torch.Size([28, 1, 1])
Total elements before problematic reshape: 28
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6159921568403928
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.7020663264554748
Prediction: True

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6680307948957478
Prediction: True

Processing sample: TRUST_P014601_368895_T_R_HVJJLDSX3_CCTCCGGTTG-TGGTGTTATG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5010532572187516
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6873701427893687
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6258414322257015
Prediction: True

Processing sample: TRUST_P010806_359174_T_R_HJW55DSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([100, 23, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 23, 768])
Input matrix size: 1766400

Making prediction...
Original input shape: torch.Size([100, 23, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6839725624856023
Prediction: True

Processing sample: TRUST_P018501_362876_T_R_HJVF2DSX3_GGTCTATTAA-CGTGTCGTGG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([15, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([15, 22, 768])
Input matrix size: 253440

Making prediction...
Original input shape: torch.Size([15, 22, 768])
Shape after padding: torch.Size([15, 24, 768])
Shape after permute: torch.Size([15, 768, 24])
Shapes after individual convolutions: [torch.Size([15, 3, 1]), torch.Size([15, 2, 1]), torch.Size([15, 1, 1])]
Shape after concatenation: torch.Size([15, 6, 1])
Shape after first reshape: torch.Size([15, 1, 6])
Shape after FC layer and dropout: torch.Size([15, 1, 1])
Total elements before problematic reshape: 15
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5874013262582715
Prediction: True

Processing sample: TRUST_03-0017_408470_T_R_22HM3TLT3_TATGCCTTAC-AGACACATTA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6998481443817163
Prediction: True

Processing sample: TRUST_P001407_363053_T_R_HJNNVDSX3_TGGCCTCTGT-CGCTGTCTCA_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 20, 768])
Input matrix size: 1536000

Making prediction...
Original input shape: torch.Size([100, 20, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6693765827570458
Prediction: True

Processing sample: TRUST_P013302_357399_T_R_HCK5MDSX3_CCTGACCACT-ATAGCCAAGA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5839977417775821
Prediction: True

Processing sample: TRUST_P009304_366635_T_R_HLGLNDSX3_ATCCTCTCAA-GCCTTGCGGA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.3858578278059201
Prediction: False

Processing sample: TRUST_P004007_340001_HFHFJDSX2_AGGCAGCTCT-ACGTTAGCCG_R1_cdr3_trb_frequencies.tsv_batch_4_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5818480905754913
Prediction: True

Processing sample: TRUST_P013302_357399_T_R_HCK5MDSX3_CCTGACCACT-ATAGCCAAGA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 26, 768])
Input matrix size: 1996800

Making prediction...
Original input shape: torch.Size([100, 26, 768])
Shape after permute: torch.Size([100, 768, 26])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5057476089770468
Prediction: True

Processing sample: TRUST_P006105_383717_T_R_H3LVMDSX7_AGGATGTGCT-GGAATTGTAA_R1_cdr3_trb_frequencies.tsv_batch_2_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.6609101393106399
Prediction: True

Processing sample: TRUST_P004306_365255_T_R_HL3HTDSX3_GATAGGCCGA-GCCATGTGCG_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 21, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 21, 768])
Input matrix size: 1612800

Making prediction...
Original input shape: torch.Size([100, 21, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5606307074664189
Prediction: True

Processing sample: TRUST_P017204_383316_T_R_H3LVMDSX7_TGGAGTACTT-TCCACACAGA_R1_cdr3_trb_frequencies.tsv_batch_5_embedding.pt
Loaded sample shape: torch.Size([100, 22, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([100, 22, 768])
Input matrix size: 1689600

Making prediction...
Original input shape: torch.Size([100, 22, 768])
Shape after padding: torch.Size([100, 24, 768])
Shape after permute: torch.Size([100, 768, 24])
Shapes after individual convolutions: [torch.Size([100, 3, 1]), torch.Size([100, 2, 1]), torch.Size([100, 1, 1])]
Shape after concatenation: torch.Size([100, 6, 1])
Shape after first reshape: torch.Size([100, 1, 6])
Shape after FC layer and dropout: torch.Size([100, 1, 1])
Total elements before problematic reshape: 100
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5708769438406666
Prediction: True

Processing sample: TRUST_04-0070_410882_T_R_22J2HKLT3_TTACGCACCT-GCTCTCGTTG_R1_cdr3_trb_frequencies.tsv_batch_1_embedding.pt
Loaded sample shape: torch.Size([33, 26, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([33, 26, 768])
Input matrix size: 658944

Making prediction...
Original input shape: torch.Size([33, 26, 768])
Shape after permute: torch.Size([33, 768, 26])
Shapes after individual convolutions: [torch.Size([33, 3, 1]), torch.Size([33, 2, 1]), torch.Size([33, 1, 1])]
Shape after concatenation: torch.Size([33, 6, 1])
Shape after first reshape: torch.Size([33, 1, 6])
Shape after FC layer and dropout: torch.Size([33, 1, 1])
Total elements before problematic reshape: 33
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.584239352328708
Prediction: True

Processing sample: TRUST_P011202_368887_T_R_HVJJLDSX3_GTGACGGAGC-TGGACCGCCA_R1_cdr3_trb_frequencies.tsv_batch_7_embedding.pt
Loaded sample shape: torch.Size([14, 20, 768])
Sample dtype: torch.float32
Sample device: cpu
Sample moved to device: cuda:0
Input matrix shape: torch.Size([14, 20, 768])
Input matrix size: 215040

Making prediction...
Original input shape: torch.Size([14, 20, 768])
Shape after padding: torch.Size([14, 24, 768])
Shape after permute: torch.Size([14, 768, 24])
Shapes after individual convolutions: [torch.Size([14, 3, 1]), torch.Size([14, 2, 1]), torch.Size([14, 1, 1])]
Shape after concatenation: torch.Size([14, 6, 1])
Shape after first reshape: torch.Size([14, 1, 6])
Shape after FC layer and dropout: torch.Size([14, 1, 1])
Total elements before problematic reshape: 14
Shape after final reshape: torch.Size([1, 100])
Shape after model 0: torch.Size([1, 2])
Shape after model 1: torch.Size([1, 2])
Shape after model 2: torch.Size([1, 2])
Shape after model 3: torch.Size([1, 2])
Shape after model 4: torch.Size([1, 2])
Final output shape: torch.Size([1, 2])
Prediction shape: torch.Size([1, 2])
Probability: 0.5092993606218552
Prediction: True

Prediction completed
The prediction results have been saved to: ./ZERO_prediction.tsv
